import React, { useState } from "react";
import "./ConnectCode.css";
import { useNavigate } from "react-router-dom";
import { ethers } from "ethers";
import { CONTRACT_ABI, CONTRACT_ADDRESS } from "../../../utils/contract";
import { useGetSigner } from "../chat_screen/useGetSigner";

function ConnectCode() {
  const nav = useNavigate();
  const [walletAddress, setWalletAddress] = useState("");
  const [error, setError] = useState("");
  const getsigner = useGetSigner();
  const bytecode = "";

  const handleInputChange = (event) => {
    setWalletAddress(event.target.value);
  };

  const handleSubmit = async () => {
    const signer = await getsigner();
    const ContractFactory = new ethers.ContractFactory(
      CONTRACT_ABI,
      bytecode,
      signer
    );
    const contract = await ContractFactory.deploy([signer.getAddress(), walletAddress], 2);
    nav("/connected");
    await contract.deploymentTransaction();
    console.log(contract.getAddress());
  };
  
  return (
    <div className="connect-container">
      <div className="step-indicator">
        <span className="step-number">2</span> /
        <span className="step-number-total">2</span>
      </div>
      <h1 className="title pr-12">Connect Your Partner</h1>

      <div className="number-section">
        <p className="connect-wallet p-10">
          <b>Connect Wallet Link</b>
        </p>
        <img
          src="/images/shiny-happy-socializing.png"
          alt="image"
          className="girl-image"
        />
      </div>

      <div className="input-section">
        <input
          type="text"
          className="input-field"
          placeholder="Enter your partner's wallet address"
          value={walletAddress}
          onChange={handleInputChange}
        />
        <button onClick={handleSubmit} className="confirm-button">
          Confirm
        </button>
      </div>
    </div>
  );
}

export default ConnectCode;
